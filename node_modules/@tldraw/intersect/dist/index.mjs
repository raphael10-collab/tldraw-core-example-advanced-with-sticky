var A=Object.defineProperty,M=Object.defineProperties;var q=Object.getOwnPropertyDescriptors;var X=Object.getOwnPropertySymbols;var V=Object.prototype.hasOwnProperty,$=Object.prototype.propertyIsEnumerable;var Y=(e,n,t)=>n in e?A(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,g=(e,n)=>{for(var t in n||(n={}))V.call(n,t)&&Y(e,t,n[t]);if(X)for(var t of X(n))$.call(n,t)&&Y(e,t,n[t]);return e},T=(e,n)=>M(e,q(n));import{Vec as d}from"@tldraw/vec";function l(e,...n){return{didIntersect:n.length>0,message:e,points:n}}function I(e,n,t=0){let r=[e[0]+n[0]/2,e[1]+n[1]/2],i=d.rotWith(e,r,t),u=d.rotWith(d.add(e,[n[0],0]),r,t),s=d.rotWith(d.add(e,n),r,t),o=d.rotWith(d.add(e,[0,n[1]]),r,t);return[["top",[i,u]],["right",[u,s]],["bottom",[s,o]],["left",[o,i]]]}function v(e,n,t){if(t===e||t===n)return!0;let r=Math.PI*2,i=(n-e+r)%r,u=(t-e+r)%r;return i<=Math.PI!=u>i}function ie(e,n){let t=d.slope(e[0],e[1]),r=d.slope(n[0],n[1]);if(t===r)return;if(Number.isNaN(t)&&!Number.isNaN(r))return[e[0][0],(e[0][0]-n[0][0])*r+n[0][1]];if(Number.isNaN(r)&&!Number.isNaN(t))return[n[0][0],(n[0][0]-e[0][0])*t+e[0][1]];let i=(t*e[0][0]-r*n[0][0]+n[0][1]-e[0][1])/(t-r),u=r*(i-n[0][0])+n[0][1];return[i,u]}function ue(e,n,t,r){let i=t[0]-e[0],u=t[1]-e[1],s=r[0]*n[1]-r[1]*n[0],o=(u*r[0]-i*r[1])/s,c=(u*n[0]-i*n[1])/s;if(o<0||c<0)return l("miss");let m=n[1]/n[0],b=r[1]/r[0],f=e[1]-m*e[0],L=(t[1]-b*t[0]-f)/(m-b),h=m*L+f;return Number.isFinite(L)?l("intersection",[L,h]):l("parallel")}function x(e,n,t,r){let[i,u]=e,[s,o]=n,[c,m]=t,[b,f]=r;if(o/s!==(f-m)/(b-c)){let p=s*(f-m)-o*(b-c);if(p!==0){let L=((u-m)*(b-c)-(i-c)*(f-m))/p,h=((u-m)*s-(i-c)*o)/p;if(L>=0&&h>=0&&h<=1)return l("intersection",[i+L*s,u+L*o])}}return l("no intersection")}function N(e,n,t,r,i=0){return G(t,r,i,e,n)}function F(e,n,t,r,i,u){let s=e,o=d.mul(n,999999999);return y(s,o,t,r,i,u)}function se(e,n,t,r=0){let{minX:i,minY:u,width:s,height:o}=t;return N(e,n,[i,u],[s,o],r)}function oe(e,n,t,r){return x(t,r,e,n)}function B(e,n,t,r){let i=d.sub(e,t),u=d.sub(r,t),s=d.sub(n,e),o=u[0]*i[1]-u[1]*i[0],c=s[0]*i[1]-s[1]*i[0],m=u[1]*s[0]-u[0]*s[1];if(o===0||c===0)return l("coincident");if(m===0)return l("parallel");if(m!==0){let b=o/m,f=c/m;if(0<=b&&b<=1&&0<=f&&f<=1)return l("intersection",d.add(e,d.mul(s,b)))}return l("no intersection")}function j(e,n,t,r){return E(t,r,e,n)}function k(e,n,t,r,i,u){let s=d.angle(t,i),o=d.angle(t,u),c=U(t,r,r,0,e,n);if(!c.didIntersect)return l("no intersection");let m=c.points.filter(b=>v(s,o,d.angle(t,b)));return m.length===0?l("no intersection"):l("intersection",...m)}function R(e,n,t,r){let i=(n[0]-e[0])*(n[0]-e[0])+(n[1]-e[1])*(n[1]-e[1]),u=2*((n[0]-e[0])*(e[0]-t[0])+(n[1]-e[1])*(e[1]-t[1])),s=t[0]*t[0]+t[1]*t[1]+e[0]*e[0]+e[1]*e[1]-2*(t[0]*e[0]+t[1]*e[1])-r*r,o=u*u-4*i*s;if(o<0)return l("outside");if(o===0)return l("tangent");let c=Math.sqrt(o),m=(-u+c)/(2*i),b=(-u-c)/(2*i);if((m<0||m>1)&&(b<0||b>1))return m<0&&b<0||m>1&&b>1?l("outside"):l("inside");let f=[];return 0<=m&&m<=1&&f.push(d.lrp(e,n,m)),0<=b&&b<=1&&f.push(d.lrp(e,n,b)),l("intersection",...f)}function y(e,n,t,r,i,u=0){if(r===0||i===0||d.isEqual(e,n))return l("no intersection");r=r<0?r:-r,i=i<0?i:-i,e=d.sub(d.rotWith(e,t,-u),t),n=d.sub(d.rotWith(n,t,-u),t);let s=d.sub(n,e),o=s[0]*s[0]/r/r+s[1]*s[1]/i/i,c=2*e[0]*s[0]/r/r+2*e[1]*s[1]/i/i,m=e[0]*e[0]/r/r+e[1]*e[1]/i/i-1,b=[],f=c*c-4*o*m;if(f===0)b.push(-c/2/o);else if(f>0){let L=Math.sqrt(f);b.push((-c+L)/2/o),b.push((-c-L)/2/o)}let p=b.filter(L=>L>=0&&L<=1).map(L=>d.add(t,d.add(e,d.mul(d.sub(n,e),L)))).map(L=>d.rotWith(L,t,u));return l("intersection",...p)}function ce(e,n,t){return z(t,e,n)}function S(e,n,t){let r=[];for(let i=1;i<t.length;i++){let u=B(e,n,t[i-1],t[i]);u&&r.push(...u.points)}return r.length===0?l("no intersection"):l("intersection",...t)}function D(e,n,t){let r=[];for(let i=1;i<t.length+1;i++){let u=B(e,n,t[i-1],t[i%t.length]);u&&r.push(...u.points)}return r.length===0?l("no intersection"):l("intersection",...t)}function G(e,n,t,r,i){return I(e,n,t).reduce((s,[o,[c,m]])=>{let b=x(r,i,c,m);return b&&s.push(l(o,...b.points)),s},[]).filter(s=>s.didIntersect)}function E(e,n,t,r){return I(e,n).reduce((u,[s,[o,c]])=>{let m=B(t,r,o,c);return m&&u.push(l(s,...m.points)),u},[]).filter(u=>u.didIntersect)}function a(e,n,t,r){return I(e,n).reduce((u,[s,[o,c]])=>{let m=E(t,r,o,c);return u.push(...m.map(b=>l(`${s} ${b.message}`,...b.points))),u},[]).filter(u=>u.didIntersect)}function H(e,n,t,r,i,u){return I(e,n).reduce((o,[c,[m,b]])=>{let f=O(t,r,i,u,m,b);return f&&o.push(T(g({},f),{message:c})),o},[]).filter(o=>o.didIntersect)}function C(e,n,t,r){return I(e,n).reduce((u,[s,[o,c]])=>{let m=R(o,c,t,r);return m&&u.push(T(g({},m),{message:s})),u},[]).filter(u=>u.didIntersect)}function J(e,n,t,r,i,u=0){return I(e,n).reduce((o,[c,[m,b]])=>{let f=y(m,b,t,r,i,u);return f&&o.push(T(g({},f),{message:c})),o},[]).filter(o=>o.didIntersect)}function me(e,n,t){let{minX:r,minY:i,width:u,height:s}=t;return a(e,n,[r,i],[u,s])}function w(e,n,t){return I(e,n).reduce((i,[u,[s,o]])=>{let c=S(s,o,t);return c.didIntersect&&i.push(l(u,...c.points)),i},[]).filter(i=>i.didIntersect)}function K(e,n,t){return I(e,n).reduce((i,[u,[s,o]])=>{let c=D(s,o,t);return c.didIntersect&&i.push(l(u,...c.points)),i},[]).filter(i=>i.didIntersect)}function O(e,n,t,r,i,u){return k(i,u,e,n,t,r)}function _(e,n,t,r,i,u){return H(i,u,e,n,t,r)}function be(e,n,t,r,i){let{minX:u,minY:s,width:o,height:c}=i;return _(e,n,t,r,[u,s],[o,c])}function de(e,n,t,r){return R(t,r,e,n)}function le(e,n,t,r){let i=t[0]-e[0],u=t[1]-e[1],s=Math.sqrt(i*i+u*u),o=(s*s-r*r+n*n)/(2*s),c=Math.sqrt(n*n-o*o);return i/=s,u/=s,l("intersection",[e[0]+i*o-u*c,e[1]+u*o+i*c],[e[0]+i*o+u*c,e[1]+u*o-i*c])}function P(e,n,t,r){return C(t,r,e,n)}function fe(e,n,t){let{minX:r,minY:i,width:u,height:s}=t;return P(e,n,[r,i],[u,s])}function Le(e,n,t,r,i,u){return F(i,u,e,n,t,r)}function U(e,n,t,r=0,i,u){return n===t?R(i,u,e,n):y(i,u,e,n,t,r)}function W(e,n,t,r=0,i,u){return n===t?C(i,u,e,n):J(i,u,e,n,t,r)}function Z(e,n,t,r,i,u,s,o){return l("no intersection")}function Ie(e,n,t,r,i,u){return Z(e,n,t,r,i,u,u,0)}function pe(e,n,t,r,i){let{minX:u,minY:s,width:o,height:c}=i;return W(e,n,t,r,[u,s],[o,c])}function he(e,n,t){let{minX:r,minY:i,width:u,height:s}=e;return N(n,t,[r,i],[u,s])}function z(e,n,t){let{minX:r,minY:i,width:u,height:s}=e;return j(n,t,[r,i],[u,s])}function ge(e,n,t){let{minX:r,minY:i,width:u,height:s}=e;return a(n,t,[r,i],[u,s])}function Te(e,n){return a([e.minX,e.minY],[e.width,e.height],[n.minX,n.minY],[n.width,n.height])}function xe(e,n,t,r,i){let{minX:u,minY:s,width:o,height:c}=e;return _(n,t,r,i,[u,s],[o,c])}function Be(e,n,t){let{minX:r,minY:i,width:u,height:s}=e;return P(n,t,[r,i],[u,s])}function Re(e,n,t,r,i=0){let{minX:u,minY:s,width:o,height:c}=e;return W(n,t,r,i,[u,s],[o,c])}function ye(e,n){return Q(n,e)}function Se(e,n){return ee(n,e)}function ae(e,n,t){return S(n,t,e)}function we(e,n,t){return w(n,t,e)}function Q(e,n){return w([n.minX,n.minY],[n.width,n.height],e)}function Xe(e,n,t){return S(n,t,e)}function Ye(e,n,t){return w(n,t,e)}function ee(e,n){return K([n.minX,n.minY],[n.width,n.height],e)}function Ne(e,n,t){return ne(t,!0).reduce((i,[u,s],o)=>{let c=x(e,n,u,s);return c&&i.push(l(o.toString(),...c.points)),i},[]).filter(i=>i.didIntersect)}function ne(e,n=!1){let t=[];for(let r=1;r<e.length;r++)t.push([e[r-1],e[r]]);return n&&t.push([e[e.length-1],e[0]]),t}export{be as intersectArcBounds,O as intersectArcLineSegment,_ as intersectArcRectangle,xe as intersectBoundsArc,Te as intersectBoundsBounds,Be as intersectBoundsCircle,Re as intersectBoundsEllipse,z as intersectBoundsLineSegment,Se as intersectBoundsPolygon,ye as intersectBoundsPolyline,he as intersectBoundsRay,ge as intersectBoundsRectangle,fe as intersectCircleBounds,le as intersectCircleCircle,de as intersectCircleLineSegment,P as intersectCircleRectangle,pe as intersectEllipseBounds,Ie as intersectEllipseCircle,Z as intersectEllipseEllipse,U as intersectEllipseLineSegment,Le as intersectEllipseRay,W as intersectEllipseRectangle,ie as intersectLineLine,k as intersectLineSegmentArc,ce as intersectLineSegmentBounds,R as intersectLineSegmentCircle,y as intersectLineSegmentEllipse,B as intersectLineSegmentLineSegment,D as intersectLineSegmentPolygon,S as intersectLineSegmentPolyline,oe as intersectLineSegmentRay,j as intersectLineSegmentRectangle,ee as intersectPolygonBounds,Xe as intersectPolygonLineSegment,Ye as intersectPolygonRectangle,Q as intersectPolylineBounds,ae as intersectPolylineLineSegment,we as intersectPolylineRectangle,se as intersectRayBounds,F as intersectRayEllipse,x as intersectRayLineSegment,Ne as intersectRayPolygon,ue as intersectRayRay,N as intersectRayRectangle,H as intersectRectangleArc,me as intersectRectangleBounds,C as intersectRectangleCircle,J as intersectRectangleEllipse,E as intersectRectangleLineSegment,K as intersectRectanglePolygon,w as intersectRectanglePolyline,G as intersectRectangleRay,a as intersectRectangleRectangle,ne as pointsToLineSegments};
//# sourceMappingURL=index.mjs.map
