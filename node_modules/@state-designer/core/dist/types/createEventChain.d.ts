import type * as S from './types';
/**
 * Handle an event, along with its consequential events.
 * (Go get a cup of coffee because this is the hard part.)
 * An event chain will process an array of event handler
 * objects, each of which may include subchains (via `else`
 * or `then` properties). Depending on what these objects
 * do, we may have to update the data draft, break the
 * chain early, and/or set a flag to notify subscribers
 * of a change once we're done.
 * @param options
 */
export declare function createEventChain<G extends S.DesignedState>(options: S.EventChainOptions<G>): S.EventChainOutcome<G>;
